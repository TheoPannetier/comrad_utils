% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_comrad_sim_hpc.R
\name{run_comrad_sim_hpc}
\alias{run_comrad_sim_hpc}
\title{Run comrad simulations on the Peregrine HPC}
\usage{
run_comrad_sim_hpc(
  nb_gens,
  nb_replicates = 1,
  comrad_params = fabrika::create_comrad_params(),
  sampling_freq = comrad::set_sampling_freq(nb_gens),
  sampling_frac = comrad::default_sampling_frac(),
  seeds = sample(1:50000, nb_replicates),
  walltime = "00:57:00"
)
}
\arguments{
\item{nb_gens}{integer, how many generations should the simulation be run
for?}

\item{nb_replicates}{numeric, number of replicate simulations to run. All
replicates share the same parameters. One job is submitted per replicate.}

\item{comrad_params}{a list of parameters for [comrad::run_simulation()],
as created with [create_comrad_params()]}

\item{sampling_freq}{numeric \code{> 0}, the frequency (in generations) at
which the community is written to output. See [comrad::set_sampling_freq()]
for the default option.}

\item{sampling_frac}{numeric (between 0 and 1), fraction of the community
(in terms of individuals) written to output at every sampled generation. A
truncation is operated.}

\item{seeds}{integer \code{> 0} vector to seed simulations with. Because each
simulation job is run in an independent session, simulations run with the
same seed will be perfect replicates. So each job instead receive a unique
seed. Use this to repeat simulations, otherwise use the default value.}

\item{walltime}{character, maximum time allocated by the HPC to a job.}
}
\description{
Calls `run_comrad_sim.bash` and passes arguments to
[comrad::run_simulation()], submits the simulation jobs through [ssh] to
Peregrine.
}
\author{
Th√©o Pannetier
}
